# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class WetKB(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: int=None, latitude: float=None, longitude: float=None, temperature: float=None, humidity: float=None, timestamp: datetime=None):  # noqa: E501
        """WetKB - a model defined in Swagger

        :param id: The id of this WetKB.  # noqa: E501
        :type id: int
        :param latitude: The latitude of this WetKB.  # noqa: E501
        :type latitude: float
        :param longitude: The longitude of this WetKB.  # noqa: E501
        :type longitude: float
        :param temperature: The temperature of this WetKB.  # noqa: E501
        :type temperature: float
        :param humidity: The humidity of this WetKB.  # noqa: E501
        :type humidity: float
        :param timestamp: The timestamp of this WetKB.  # noqa: E501
        :type timestamp: datetime
        """
        self.swagger_types = {
            'id': int,
            'latitude': float,
            'longitude': float,
            'temperature': float,
            'humidity': float,
            'timestamp': datetime
        }

        self.attribute_map = {
            'id': 'id',
            'latitude': 'latitude',
            'longitude': 'longitude',
            'temperature': 'temperature',
            'humidity': 'humidity',
            'timestamp': 'timestamp'
        }
        self._id = id
        self._latitude = latitude
        self._longitude = longitude
        self._temperature = temperature
        self._humidity = humidity
        self._timestamp = timestamp

    @classmethod
    def from_dict(cls, dikt) -> 'WetKB':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The WetKB of this WetKB.  # noqa: E501
        :rtype: WetKB
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this WetKB.


        :return: The id of this WetKB.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this WetKB.


        :param id: The id of this WetKB.
        :type id: int
        """

        self._id = id

    @property
    def latitude(self) -> float:
        """Gets the latitude of this WetKB.


        :return: The latitude of this WetKB.
        :rtype: float
        """
        return self._latitude

    @latitude.setter
    def latitude(self, latitude: float):
        """Sets the latitude of this WetKB.


        :param latitude: The latitude of this WetKB.
        :type latitude: float
        """

        self._latitude = latitude

    @property
    def longitude(self) -> float:
        """Gets the longitude of this WetKB.


        :return: The longitude of this WetKB.
        :rtype: float
        """
        return self._longitude

    @longitude.setter
    def longitude(self, longitude: float):
        """Sets the longitude of this WetKB.


        :param longitude: The longitude of this WetKB.
        :type longitude: float
        """

        self._longitude = longitude

    @property
    def temperature(self) -> float:
        """Gets the temperature of this WetKB.


        :return: The temperature of this WetKB.
        :rtype: float
        """
        return self._temperature

    @temperature.setter
    def temperature(self, temperature: float):
        """Sets the temperature of this WetKB.


        :param temperature: The temperature of this WetKB.
        :type temperature: float
        """

        self._temperature = temperature

    @property
    def humidity(self) -> float:
        """Gets the humidity of this WetKB.


        :return: The humidity of this WetKB.
        :rtype: float
        """
        return self._humidity

    @humidity.setter
    def humidity(self, humidity: float):
        """Sets the humidity of this WetKB.


        :param humidity: The humidity of this WetKB.
        :type humidity: float
        """

        self._humidity = humidity

    @property
    def timestamp(self) -> datetime:
        """Gets the timestamp of this WetKB.


        :return: The timestamp of this WetKB.
        :rtype: datetime
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp: datetime):
        """Sets the timestamp of this WetKB.


        :param timestamp: The timestamp of this WetKB.
        :type timestamp: datetime
        """

        self._timestamp = timestamp
